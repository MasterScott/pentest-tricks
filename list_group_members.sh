#!/bin/bash

# Copyright (C) 2015 Sebastien MACKE
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2, as published by the
# Free Software Foundation
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details (http://www.gnu.org/licenses/gpl.txt).

# This script will recursively list members of the given target domain group(s).

DOMAINS=()

usage()
{
  echo "Usage:
$(basename $0) -d'<domain name> <domain controller> <domain creds>' <target group> ...
$(basename $0) -d'CORPDOM 10.0.0.100 jdoe%Password1' '.\\Administrators'
$(basename $0) -d'CORPDOM 10.0.0.100 jdoe%Password1' -d'OTHERDOM 10.2.0.100 CORPDOM\\jdoe%Password1' 'CORPDOM\\Domain Admins' 'CORPDOM\\Enterprise Admins' ..."
  exit 2
}

while getopts d: opt ; do
  case $opt in
    d) DOMAINS+=("$OPTARG")
      ;;
    *) usage
  esac
done
shift "$((OPTIND-1))"

if (( $# < 1)); then
  usage
fi

net_members()
{
  local dc creds
  for i in "${DOMAINS[@]}"; do
    domain=$(echo $i | cut -d' ' -f1)
    if [[ $1 == $domain ]]; then
      dc=$(echo $i | cut -d' ' -f2)
      creds=$(echo $i | cut -d' ' -f3-)
      break
    fi
  done
  if [[ -z $dc ]]; then # fallback if the group's domain name is not found in DOMAINS
    dc=$(echo "${DOMAINS[0]}" | cut -d' ' -f2)
    creds=$(echo "${DOMAINS[0]}" | cut -d' ' -f3-)
  fi

  net -l -U "$creds" -S "$dc" rpc group members "$2"
}

print_members()
{
echo "$indent$1"

local indent="$2  "
local d=$(echo "$1" | cut -d'\' -f1)
local n=$(echo "$1" | cut -d'\' -f2-)


while read -r line; do

  sid=$(echo "$line" | cut -d' ' -f1)
  domain=$(echo "$line" | cut -d' ' -f2- | cut -d '\' -f1)
  temp=$(echo "$line" | cut -d' ' -f2- | cut -d '\' -f2-)
  name=$(echo "$temp" | sed -ne 's,^\(.*\) [0-9]$,\1,p')
  use=$(echo "$temp" | sed -e 's,^.* ,,')

  #echo "debug: $name ($domain)"
  
  if [[ $use == "1" ]]; then
    echo "$indent$name"
  else
    print_members "$domain\\$name" "$indent"
  fi 

done < <(net_members "$d" "$n")

}

for grp in "$@"; do
  print_members "$grp"
  echo
done
